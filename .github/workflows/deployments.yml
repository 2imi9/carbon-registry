name: Deploy Services
on:
  push:
    branches:
      - develop
      - main
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  conditional_job_check_files:
    runs-on: ubuntu-latest
    # Declare outputs for next jobs
    outputs:
      deps_changed: ${{ steps.check_file_changed.outputs.deps_changed }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: check_file_changed
      run: |
        current_commit=`git log -n 1 --pretty=format:%H`
        echo $current_commit
        last_deps_mod_commit=`git log -n 1 --pretty=format:%H -- ./lambda/services/package.json`
        echo $last_deps_mod_commit
        if [ "${current_commit}" = "${last_deps_mod_commit}" ]; then
          deps_changed='True'
        else
          deps_changed='False'
        fi
        echo $deps_changed
  layer:
    name: layer
    runs-on: ubuntu-latest
    needs: [ conditional_job_check_files ]
    steps:
      - name: check_file_changed
        run: |
          echo "${needs.conditional_job_check_files.outputs.deps_changed}"
          echo "${needs.conditional_job_check_files.outputs}"
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ needs.conditional_job_check_files.outputs.deps_changed == 'True' }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Copy package.json
        if: ${{ needs.conditional_job_check_files.outputs.deps_changed == 'True' }}
        working-directory: ./lambda/layer
        run: cp ../services/package.json ./ && cp ../services/yarn.lock ./ && yarn install --frozen-lockfile
      - name: serverless deploy develop
        if: ${{ needs.conditional_job_check_files.outputs.deps_changed == 'True' && github.ref == 'refs/heads/develop'}}
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/services && serverless deploy --stage dev"
          entrypoint: /bin/sh
      - name: serverless deploy main
        if: ${{ needs.conditional_job_check_files.outputs.deps_changed == 'True' && github.ref == 'refs/heads/main'}}
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/services && serverless deploy --stage prod"
          entrypoint: /bin/sh
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: [layer]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependency
        working-directory: ./lambda/services
        run: yarn install --frozen-lockfile
      - name: version
        run: |
          echo "ARN=$(aws lambda list-layer-versions --layer-name lambda-layer --region us-east-1 --query 'LayerVersions[0].LayerVersionArn')"
        id: layerArn
      - name: serverless deploy develop
        if: github.ref == 'refs/heads/develop'
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/services && serverless deploy --stage dev --param='depLayerArn=${{ steps.version.outputs.ARN }}' "
          entrypoint: /bin/sh
      - name: serverless deploy main
        if: github.ref == 'refs/heads/main'
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd ./lambda/services && serverless deploy --stage prod"
          entrypoint: /bin/sh